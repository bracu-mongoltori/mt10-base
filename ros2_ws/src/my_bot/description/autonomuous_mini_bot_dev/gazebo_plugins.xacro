<?xml version="1.0" ?>
<robot name="turtlebot3_waffle" xmlns:xacro="http://ros.org/wiki/xacro">

    <gazebo reference="imu_link">
        <sensor name="tb3_imu" type="imu">
          <always_on>true</always_on>
          <update_rate>200</update_rate>
          <imu>
            <angular_velocity>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </z>
            </angular_velocity>
            <linear_acceleration>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </z>
            </linear_acceleration>
          </imu>
          <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
            <initial_orientation_as_reference>false</initial_orientation_as_reference>
            <ros>
              <!-- <namespace>/tb3</namespace> -->
              <remapping>~/out:=/imu</remapping>
              </ros>
          </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="gps_link">
        <sensor name="tb3_gps" type="gps">
          <always_on>true</always_on>
          <update_rate>1</update_rate>
          <pose>0 0 0 0 0 0</pose>
          <gps>
            <position_sensing>
              <horizontal>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
                </noise>
              </horizontal>
              <vertical>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
                </noise>
              </vertical>
            </position_sensing>
          </gps>
          <plugin name="my_gps_plugin" filename="libgazebo_ros_gps_sensor.so">
            <ros>
              <remapping>~/out:=/gps/fix</remapping>
            </ros>
          </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="base_scan">
        <sensor name="hls_lfcd_lds" type="ray">
          <always_on>true</always_on>
          <visualize>false</visualize>
          <pose>-0.064 0 0.15 0 0 0</pose>
          <update_rate>5</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>360</samples>
                <resolution>1.000000</resolution>
                <min_angle>0.000000</min_angle>
                <max_angle>6.280000</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.00000</min>
              <max>20.0</max>
              <resolution>0.015000</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </ray>
          <plugin name="turtlebot3_laserscan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <!-- <namespace>/tb3</namespace> -->
                <remapping>~/out:=/scan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
            <frame_name>base_scan</frame_name>
          </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="camera_link">
        <sensor name="intel_realsense_r200_depth" type="depth">
          <always_on>1</always_on>
          <update_rate>5</update_rate>
          <pose>0.064 -0.047 0.107 0 0 0</pose>
          <camera name="realsense_depth_camera">
          </camera>
          <plugin name="intel_realsense_r200_depth_driver" filename="libgazebo_ros_camera.so">
            <ros>
            </ros>
            <camera_name>intel_realsense_r200_depth</camera_name>
            <frame_name>camera_depth_frame</frame_name>
            <hack_baseline>0.07</hack_baseline>
            <min_depth>0.001</min_depth>
            <max_depth>5.0</max_depth>
          </plugin>
        </sensor>
    </gazebo>

    <gazebo>
        <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">

            <ros>
            <!-- <namespace>/tb3</namespace> -->
            <!--since gazebo_plugins publish tf topic in global namespace /tf only and it
                cannot be remapped like (namespace/tf) through launch arguments -->
            <remapping>/tf:=/tf</remapping>
            </ros>

            <update_rate>30</update_rate>

            <!-- wheels -->
            <left_joint>wheel_left_joint</left_joint>
            <right_joint>wheel_right_joint</right_joint>

            <!-- kinematics -->
            <wheel_separation>0.287</wheel_separation>
            <wheel_diameter>0.066</wheel_diameter>

            <!-- limits -->
            <max_wheel_torque>20</max_wheel_torque>
            <max_wheel_acceleration>1.0</max_wheel_acceleration>

            <command_topic>/cmd_vel</command_topic>

            <!-- output -->
            <!-- The odom -> base link transform is published by the ekf in robot localization -->
            <publish_odom>true</publish_odom>
            <publish_odom_tf>false</publish_odom_tf>
            <publish_wheel_tf>false</publish_wheel_tf>

            <odometry_topic>odom</odometry_topic>
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_footprint</robot_base_frame>

        </plugin>
    </gazebo>


</robot>